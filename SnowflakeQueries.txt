use ECOMMERCE_DB;

CREATE OR REPLACE TABLE CUSTOMER_DETAILS(
cust_id	VARCHAR(10) PRIMARY KEY,
cust_name	VARCHAR(50) NOT NULL,
phone		VARCHAR(50),
email		VARCHAR(50),
address		VARCHAR(250)
);

CREATE OR REPLACE TABLE PRODUCT_INFO(
prod_id	VARCHAR(10) PRIMARY KEY,
prod_name	VARCHAR(50) NOT NULL,
brand		VARCHAR(50),
price		INT
);

CREATE OR REPLACE TABLE ORDER_DETAILS(
ord_id		BIGINT PRIMARY KEY,
prod_id		VARCHAR(10) REFERENCES PRODUCT_INFO(prod_id),
cust_id		VARCHAR(10) REFERENCES CUSTOMER_DETAILS(cust_id),
quantity	INT,
discount	INT,
date		DATE
);

Show tables;

INSERT INTO CUSTOMER_DETAILS VALUES
('C1','Alice Johnson','(646)890-590','alice@demo.com','New York'),
('C2','James Javier','(647)340-132','james@demo.com','Boston'),
('C3','Bob Parker','(645)456-724','bob@demo.com','Washinton'),
('C4','Mark Cooper','(647)989-590','eshal@demo.com','New York'),
('C5','Juan de Dios Huarancca','(511)999-4270','jhuarancca@demo.com','Lima-PerÃº');

INSERT INTO PRODUCT_INFO VALUES
('P1','Samsung S22','Samsung',800),
('P2','Google Pixel 6 Pro','Google',900),
('P3','Sony Bravia TV','Sony',600),
('P4','Dell XPS 17','Dell',20000),
('P5','iPhone 13','Apple',800),
('P6','Macbook Pro 16','Apple',8000);

INSERT INTO ORDER_DETAILS VALUES
(1,'P1','C1',2,10,'2020-01-01'),
(2,'P3','C1',1,0,'2020-01-01'),
(3,'P2','C2',1,0,'2020-01-01'),
(4,'P4','C3',3,20,'2020-01-01'),
(5,'P3','C4',1,10,'2020-01-01'),
(6,'P6','C2',10,30,'2020-01-01'),
(7,'P4','C3',5,25,'2020-01-01');


SELECT * FROM CUSTOMER_DETAILS;
SELECT * FROM PRODUCT_INFO;
SELECT * FROM ORDER_DETAILS;

CREATE OR REPLACE VIEW ORDER_SUMMARY
AS
SELECT o.ord_id,o.date,c.cust_name,p.prod_name,
    p.price,o.quantity,
	(p.price*o.quantity) - (p.price * o.quantity) * (o.discount::float/100) as cost
FROM CUSTOMER_DETAILS c
JOIN ORDER_DETAILS o ON o.cust_id=c.cust_id
JOIN PRODUCT_INFO p ON p.prod_id=o.prod_id
ORDER BY o.ord_id,c.cust_name;

SELECT * FROM ORDER_SUMMARY;

INSERT INTO ORDER_DETAILS VALUES
(8,'P3','C1',2,10,'2020-01-01'),
(9,'P5','C2',1,0,'2020-01-01'),
(10,'P5','C3',1,0,'2020-01-01');

SELECT * FROM ORDER_SUMMARY;

CREATE OR REPLACE VIEW PREMIUM_PRODUCTS
AS
SELECT * FROM PRODUCT_INFO WHERE price>1000;

select * from PREMIUM_PRODUCTS

ALTER TABLE PRODUCT_INFO ADD COLUMN configuration VARCHAR(100);

select * from PREMIUM_PRODUCTS;


SELECT * FROM ORDER_SUMMARY
WHERE prod_name like '%S%';


CREATE OR REPLACE SECURE VIEW ORDER_SUMMARY_SECURE 
COMMENT ="This is a secure version"
AS
SELECT * FROM ORDER_SUMMARY;

SELECT * FROM ORDER_SUMMARY_SECURE;

CREATE OR REPLACE TABLE LINEITEM AS
SELECT * FROM "SNOWFLAKE_SAMPLE_DATA"."TPCH_SF10"."LINEITEM";

SELECT * FROM "SNOWFLAKE_SAMPLE_DATA"."TPCH_SF10"."LINEITEM" LIMIT 100;

SELECT * FROM LINEITEM LIMIT 100;

CREATE OR REPLACE VIEW HIGH_TAX_VIEW
AS
SELECT * FROM LINEITEM WHERE L_TAX>0.05;

SELECT * FROM HIGH_TAX_VIEW WHERE L_TAX>0.06;   --12S 13.3m

CREATE OR REPLACE SECURE MATERIALIZED VIEW HIGH_TAX_VIEW_MATERIALIZED
AS
SELECT * FROM LINEITEM WHERE L_TAX>0.05;

SELECT * FROM HIGH_TAX_VIEW WHERE L_TAX>0.06;   --12S 13.3m





